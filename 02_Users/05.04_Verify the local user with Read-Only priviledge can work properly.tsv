*Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Suite Setup	Run Keywords	Fetch_CM_Token	Add_Profile	Add_Local_User	Add_Group	Add_Device	Get Year Month Day time
Suite Teardown	Cleaning environments
Force Tags	wcxu

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
${readonly_profile}	file/sendfile/readonly_profile.txt
&{fortiweb_qa_credential_incorrect}	username=fortiweb_qa	password=fortinet312312
&{fortiweb_qa_credential}	username=fortiweb_qa	password=fortinet
&{device_info}	name=${Device_Name}	ipaddress=10.200.8.22	username=admin	password=fortinet	description=This is a autotest device
&{request_job_data}	name=job_backup_config	plugin=backup-config-for-fortiweb	description=This_is_description_of_this_job	device=
${license_file}	file/sendfile/FVVM020000139374.lic
&{user_info}	username=fortinet_qa	password=fortinet	comments=This is a normal local user

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*

001  Verify that the user can't login with invalid password
	POST	/api/v1/auth-tokens/	${fortiweb_qa_credential_incorrect}
	Response Code Should Be	400
	Response Should Contain String	Authentication failure. Please try again...
	Last Elog Sholud Contain	User (fortiweb_qa) login failed from API

002  Verify the user can login with valid password
	POST	/api/v1/auth-tokens/	${fortiweb_qa_credential}
	Response Code Should Be	200
	Response Should Contain Key	expires
	Response Should Contain Key	token
	Last Elog Sholud Contain	User (fortiweb_qa) with profile (readonly_profile) logged in from API

003  Verify the user can view divice(Device module)
	Fetch_CM_Token	${fortiweb_qa_credential}
	${device_id}=	Search_Filter_ID	/api/v1/devices/device/	search=${Device_Name}&name__exact=${Device_Name}
	Set Suite Variable	${device_id}
	GET	/api/v1/devices/device/${device_id}/
	Response Code Should Be	200
	Response Should Contain Sub Dictionary
	...	name=${Device_Name}	description=This is a autotest device	username=admin	ipaddress=10.200.8.22

004  Verify the user can't add device(Device module)
	Fetch_CM_Token	${fortiweb_qa_credential}
	POST	/api/v1/devices/device/	${device_info}
	Response Code Should Be	403
	Response Should Contain String	You do not have permission to perform this action.

005  Verify the user can't delete device(Device module)
	Fetch_CM_Token	${fortiweb_qa_credential}
	DELETE	/api/v1/devices/device/${device_id}/
	Response Code Should Be	403
	Response Should Contain String	You do not have permission to perform this action.

006  Verify the user can't add job(Jobs)
	Fetch_CM_Token	${fortiweb_qa_credential}
	Get_Device_Information
	Set to Dictionary	${request_job_data}	device	${Device_List}
	POST	/api/v1/jobs/job/	${request_job_data}
	Response Code Should Be	403
	Response Should Contain String	You do not have permission to perform this action.

007  Verify the user can view jobs(Jobs)
	Fetch_CM_Token	${fortiweb_qa_credential}
#	${job_id}=	Search_Filter_ID	/api/v1/jobs/job/	search=job_backup_config&name__exact=job_backup_config
#	Set Suite Variable	${job_id}
	GET	/api/v1/jobs/job/
	Response Code Should Be	200
#	Response Should Contain Sub Dictionary
#	...	name=job_backup_config	plugin=backup-config-for-fortiweb	description=This_is_description_of_this_job	device=${Device_List}

008  Verify the user can't add license(License)
	Fetch_CM_Token	${fortiweb_qa_credential}
	${lic_id}=	Search_Filter_ID	/api/v1/licenses/	search=FVVM080000145634&sn__exact=FVVM080000145634
	Pass Execution If	'${lic_id}' == '-1'	No License exist
	Set Suite Variable	${lic_id}
	DELETE	/api/v1/licenses/${lic_id}/
	Response Code Should Be	204
	POST File	/api/v1/licenses/	${license_file}
	Response Code Should Be	403
	Response Should Contain String	You do not have permission to perform this action.

009  Verify the user can view licenses(License)
	Fetch_CM_Token	${fortiweb_qa_credential}
	GET	/api/v1/licenses/
	Response Code Should Be	200

010  Verify the user can view attack logs(Log)
	Fetch_CM_Token	${fortiweb_qa_credential}
	GET	/api/v1/logs/?dev_name=${Device_Name}&dev_type=1&filter=[{"id":"rel_time","value":["${year}-${month_pre}-${day}+06:58:52","${year}-${month}-${day}+06:58:52"],"logic":{"RANGE":1,"is":{"date_time":true},"modifiers":[">="],"search":"string"}}]&log=alog.log&offset=0&size=10
	Response Code Should Be	200
#	Should Contain	${resp.content}	${Device_Name}

011  Verify the user can't create user(System Settings)
	Fetch_CM_Token	${fortiweb_qa_credential}
	POST	/api/v1/system/user/	${user_info}
	Response Code Should Be	403
	Response Should Contain String	You do not have permission to perform this action.


*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
Add_Profile
	Create_Profile_On_Setup	/api/v1/system/profile/	${readonly_profile}	name=readonly_profile

Add_Local_User
	Create_User_On_Setup	/api/v1/system/user/	username=fortiweb_qa	password=fortinet	description=This is a normal local user	profile=${ID}

Add_Group
	Create_On_Setup	/api/v1/devices/group/	name=${Group_Name}	description=This is ${Group_Name} for autotest

Add_Device
	Create_On_Setup	/api/v1/devices/device/	name=${Device_Name}	ipaddress=10.200.8.22	username=admin	password=fortinet	description=This is a autotest device	group=${ID}

Cleaning environments
	Fetch_CM_Token
	Delete_On_Teardown	/api/v1/system/user/	fortiweb_qa	username
	Delete_On_Teardown	/api/v1/system/user/	fortinet_qa	username
	Delete_On_Teardown	/api/v1/system/profile/	readonly_profile	name
	Delete_On_Teardown	/api/v1/jobs/job/	job_backup_config	name
	Delete_On_Teardown	/api/v1/devices/group/	${Group_Name}	name
	Delete_On_Teardown	/api/v1/devices/device/	${Device_Name}	name


