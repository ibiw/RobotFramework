*Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Suite Setup	Run Keywords	Fetch_CM_Token	Add_LDAPServer	Add_LDAPUser
Suite Teardown	Cleaning environments
Force Tags	wcxu

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
&{request_data_ldap_user}	username=test1	password=123456	server=Auto_LDAPServer1	comments=This is a normal ldap user	type=LDAP	wildcard=True
&{test1_credential_incorrect}	username=test1	password=fortinetfdsfsd
&{patch_data}	name=Auto_LDAPServer1	ldap_server_uri=10.200.10.16
&{test1_credential}	username=test1	password=fortinet
&{test1_fallback_credential}	username=test1	password=123456

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*

001  Verify the added LDAP user can be view by admin
	GET	/api/v1/system/user/${User_ID}/
	Response Code Should Be	200
	Response Should Contain Sub Dictionary
	...	username=test1	id=${User_ID}	url=/api/v1/system/user/${User_ID}/	comments=This is a normal ldap user

002  Verify the options of added LDAP user can be view by admin
	OPTIONS	/api/v1/system/user/${User_ID}/
	Response Code Should Be	200
	Response Should Contain Sub Dictionary	name=User Detail	description=Display a user.

003  Verify the head method can be supported for added LDAP user
	HEAD	/api/v1/system/user/${User_ID}/
	Response Code Should Be	200

004  Verify the duplicated LDAP user can't be added
	POST	/api/v1/system/user/	${request_data_ldap_user}
	Response Code Should Be	400
	Response Should Contain String	A user with that username already exists

005  Verify the LDAP user can't login with incorrect password
	POST	/api/v1/auth-tokens/	${test1_credential_incorrect}
	Response Code Should Be	400
	Response Should Contain String	Authentication failure. Please try again...

006  Verify the new added LDAP user can login
	POST	/api/v1/auth-tokens/	${test1_credential}
	Response Code Should Be	200
	Response Should Contain Key	expires
	Response Should Contain Key	token

007  Verify the LDAP user can be view by himself
	Fetch_CM_Token	${test1_credential}
	GET	/api/v1/system/user/${User_ID}/
	Response Code Should Be	200
	Response Should Contain Sub Dictionary
	...	username=test1	id=${User_ID}	url=/api/v1/system/user/${User_ID}/	comments=This is a normal ldap user

008  Verify the added LDAP user can view the user list
	GET	/api/v1/system/user/
	Response Code Should Be	200

010  Verify the LDAP user can logout
	DELETE	/api/v1/auth-tokens/	${admin_headers}
	Response Code Should Be	200
	Response Should Contain String	logout succeeded
	Response Should Contain Key	token

011  Edit the LDAP server IP to make the server is unreachable
	Fetch_CM_Token
	PATCH	/api/v1/system/ldap-server/${ID}/	${patch_data}
	Response Code Should Be	200
	Response Should Contain Sub Dictionary
	...	name=Auto_LDAPServer1	ldap_server_uri=10.200.10.16	cn_id=uid	d_name=ou=People,dc=devqalab,dc=com,dc=cn

012  Verify the LDAP user can login with the fallback password
	POST	/api/v1/auth-tokens/	${test1_fallback_credential}
	Response Code Should Be	200
	Response Should Contain Key	expires
	Response Should Contain Key	token

013  Verify the LDAP user with fallback password can logout
	DELETE	/api/v1/auth-tokens/	${admin_headers}
	Response Code Should Be	200
	Response Should Contain Key	token
	Response Should Contain String	logout succeeded

014  Verify the LDAP Server which associated users can be delete
	Fetch_CM_Token
	${User_ID}=	Search_Filter_ID	/api/v1/system/user/	search=test1
	Pass Execution If	'${User_ID}' == '-1'	No User exist
	DELETE	/api/v1/system/user/${User_ID}
	Response Code Should Be	204


*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*

Add_LDAPServer
	Create_On_Setup	/api/v1/system/ldap-server/	name=Auto_LDAPServer1	ldap_server_uri=10.200.10.15	cn_id=uid	d_name=ou=People,dc=devqalab,dc=com,dc=cn

Add_LDAPUser
	Create_User_On_Setup	/api/v1/system/user/	username=test1	password=123456	server=Auto_LDAPServer1	comments=This is a normal ldap user	type=LDAP	wildcard=True

Cleaning environments
	Delete_On_Teardown	/api/v1/system/user/	test1	username
	Delete_On_Teardown	/api/v1/system/ldap-server/	Auto_LDAPServer1	name



