*Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Suite Setup	Run Keywords	Fetch_CM_Token	Add_Profile_and_User	Add_Groups	Add_Devices	Create_Jobs
Suite Teardown	Cleaning environments
Force Tags	rw

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
#&{request_data}	name=${Device_Name}	username=${Device_Username}	password=${Device_Password}	ipaddress=${Device_IPaddress}	description=${Device_Description}	variables=${Device_Variables}

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*

001  Verify a warning will display when deleting a non-exist device
	DELETE	/api/v1/devices/device/999999/
	Response Code Should be	404

002  Verify a device can't be delete by an unauthorized user
	Fetch_CM_Token	{"username":"none", "password":"fortinet"}
	DELETE	/api/v1/devices/device/${did_1}/
	Response Code Should be	403
	Fetch_CM_Token

## The device which used by a job can be deleted
003  Verify a device which used by a job can't be delete
	DELETE	/api/v1/devices/device/${did_1}/
	Response Code Should be	400
	# Last Elog Sholud Contain	Deleting device (${Device_Name}) failed
	Last Elog Sholud Contain	Deleting device (${Device_Name}) failed, the device is being used


004  Verify a device wasn't use can be delete
	DELETE	/api/v1/devices/device/${did_2}/
	Response Code Should be	204
	Last Elog Sholud Contain	Deleting device (${Device_Name2}) succeeded

*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*

Add_Profile_and_User
	POST	/api/v1/system/profile/	{"name":"None", "priv":[{"items":[],"label":"Device Manager","name":"devices","descr":"Privilege to manage devices.","priv":"NONE"},{"items":[],"label":"Config Management","name":"config","descr":"Privilege to manage config files.","priv":"NONE"},{"items":[],"label":"Jobs","name":"jobs","descr":"Privilege to manage jobs.","priv":"NONE"},{"items":[],"label":"License","name":"licenses","descr":"Privilege to manage license.","priv":"NONE"},{"items":[],"label":"Log View","name":"logs","descr":"Privilege to manage Logs.","priv":"NONE"},{"items":[],"label":"System Settings","name":"system","descr":"Privilege to Config system settings.","priv":"NONE"}]}
	${profile_id}	Search_Filter_ID	/api/v1/system/profile/	search=None&name__exact=None
	POST	/api/v1/system/user/	{"username":"none", "password":"fortinet", "profile":${profile_id}}
	Set Suite Variable	${profile_id}

Add_Groups
	POST	/api/v1/devices/group/	{"name":"${Group_Name}", "description":"This is ${Group_Name}", "variables":{"VIP_1": "1.1.1.1", "DMZ": "Port1"}}
	${gid_1}	Search_Filter_ID	/api/v1/devices/group/	search=${Group_Name}&name__exact=${Group_Name}
	Set Suite Variable	${gid_1}

Add_Devices
	POST	/api/v1/devices/device/	{"name":"${Device_Name}", "username":"${Device_Username}", "password":"${Device_Password}", "ipaddress":"${Device_IPaddress}", "group":"${gid_1}", "variables":${device_Variables}}
	${did_1}	Search_Filter_ID	/api/v1/devices/device/	search=${Device_Name}&name__exact=${Device_Name}
	Set Suite Variable	${did_1}

	POST	/api/v1/devices/device/	{"name":"${Device_Name2}", "username":"${Device_Username2}", "password":"${Device_Password2}", "ipaddress":"${Device_IPaddress2}", "group":"${gid_1}", "variables":${device_Variables2}}
	${did_2}	Search_Filter_ID	/api/v1/devices/device/	search=${Device_Name2}&name__exact=${Device_Name2}
	Set Suite Variable	${did_2}

Create_Jobs
	POST	/api/v1/jobs/job/	{"name":"Test_Job-01", "device":[{"device_id":${did_1}, "device_name":"${Device_Name}"}], "plugin":"push-command-to-fortiweb", "plugin_option": {"load_type":"add", "config":"execute pinig 10.200.111.112"}}
	${jid_1}	Search_Filter_ID	/api/v1/jobs/job/	search=Test_Job-01
	POST	/api/v1/jobs/job/${jid_1}/launch/
#	Set Suite Variable	${jid_1}

Cleaning environments
	Delete_On_Teardown	/api/v1/jobs/job/	Test_Job-01	name
	Delete_On_Teardown	/api/v1/devices/device/	${Device_Name}	name
	Delete_On_Teardown	/api/v1/devices/device/	${Device_Name}	name
	DELETE	/api/v1/devices/group/${gid_1}/
	Delete_On_Teardown	/api/v1/system/user/	none	username
	DELETE	/api/v1/system/profile/${profile_id}/