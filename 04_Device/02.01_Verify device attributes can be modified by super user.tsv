*Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Resource	../Resource/SSH_Resource.tsv
Suite Setup	Run Keywords	Fetch_CM_Token	Add_Groups	Add_Devices	Add_FortiWeb_User
Suite Teardown	Cleaning environments
Force Tags	rw

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
#&{request_data}	username=${Device_Username_Mod}	password=${Device_Password_Mod}	ipaddress=${Device_IPaddress_Mod}	description=${Device_Description_Mod}	variables=${Device_Variables_Mod}	enabled=${Device_Enabled_Mod}	group=${1}	name=${Device_Name_Mod}

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*

## When delete a device group which has device in it, it's better to ask to confirm or request to delete device first
001  obtain the device id
#	${did_1}	Search_Filter_ID	/api/v1/devices/device/	search=${Device_Name}&name__exact=${Device_Name}
	Log to Console	${\n}--The deivce ID of ${Device_Name} is: ${did_1}
#	Set Suite Variable	${did_1}

002  Verify a device can be modified using PUT method
	PUT	/api/v1/devices/device/${did_1}/	{"name":"${Device_Name}_Modified", "username":"${Device_Username}", "password":"${Device_Password}", "ipaddress":"${Device_IPaddress}", "group":"${gid_1}"}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device (${Device_Name}_Modified) succeeded

## device name cannot same as group name
003  Verify device name can be modified
	PATCH	/api/v1/devices/device/${did_1}/	{"name":"${Device_Name}", "username":"${Device_Username}", "password":"${Device_Password}", "ipaddress":"${Device_IPaddress}", "group":"${gid_1}"}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device (${Device_Name}) succeeded
	${result}	Create Dictionary	name=${Device_Name}	id=${did_1}	group=${gid_1}	url=/api/v1/devices/device/${did_1}/
	Dictionary Should Contain Sub Dictionary	${resp.json()}	${result}

## The Event log should log the current editing device name not the duplicated one
004  Verify device name can't be modified to a exist one
	PATCH	/api/v1/devices/device/${did_1}/	{"name":"${Device_Name2}", "username":"${Device_Username}", "password":"${Device_Password}", "ipaddress":"${Device_IPaddress}", "group":"${gid_1}"}
	Response Code Should Be	400
	Response Should Contain String	The device with this name already exists
	Last Elog Sholud Contain	Editing device (${Device_Name2}) failed, the name already exists

005  Verify device group can be modified
#	${gid_2}	Search_Filter_ID	/api/v1/devices/group/	search=${Group_Name2}&name__exact=${Group_Name2}
	PATCH	/api/v1/devices/device/${did_1}/	{"group":"${gid_2}"}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device (${Device_Name}) succeeded
#	Set Suite Variable	${gid_2}

006  Verify device username/password can be modified
	PATCH	/api/v1/devices/device/${did_1}/	{"username":"${Device_Username}_1", "password":"fortinet"}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device (${Device_Name}) succeeded

007  Verify device description can be modified
	PATCH	/api/v1/devices/device/${did_1}/	{"description":"This is ${Device_Name}"}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device (${Device_Name}) succeeded

008  Verify device variables can be modified
	PATCH	/api/v1/devices/device/${did_1}/	{"variables":{"VIP_1": "1.1.1.1"}}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device (${Device_Name}) succeeded

009  Verify device fds_proxy can be modified
	PATCH	/api/v1/devices/device/${did_1}/	{"fds_enabled":"true"}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device (${Device_Name}) succeeded

010  Verify devcie variable_enabled can be modified
	PATCH	/api/v1/devices/device/${did_1}/	{"variable_enabled":"false"}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device (${Device_Name}) succeeded

##??
#011  Verify the status can be modified

*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
Add_Groups
	POST	/api/v1/devices/group/	{"name":"${Group_Name}", "description":"This is ${Group_Name}", "variables":{"VIP_1": "1.1.1.1", "DMZ": "Port1"}}
	POST	/api/v1/devices/group/	{"name":"${Group_Name2}", "description":"This is ${Group_Name2}", "variables":{"VIP_1": "2.2.2.2", "DMZ": "Port2"}}
	${gid_1}	Search_Filter_ID	/api/v1/devices/group/	search=${Group_Name}&name__exact=${Group_Name}
	Set Suite Variable	${gid_1}
	${gid_2}	Search_Filter_ID	/api/v1/devices/group/	search=${Group_Name2}&name__exact=${Group_Name2}
	Set Suite Variable	${gid_2}

Add_Devices
#	POST	/api/v1/devices/device/	{"name":"${Device_Name}", "username":"${Device_Username}", "password":"${Device_Password}", "ipaddress":"${Device_IPaddress}", "group":"${gid_1}"}
#	POST	/api/v1/devices/device/	{"name":"${Device_Name2}", "username":"${FWB2_Username}", "password":"${FWB2_Password}", "ipaddress":"${FWB2_IP}", "group":"${gid_1}"}
	POST	/api/v1/devices/device/	{"name":"${Device_Name}", "username":"${Device_Username}", "password":"${Device_Password}", "ipaddress":"${Device_IPaddress}", "group":"${gid_1}", "variables":${device_Variables}}
	POST	/api/v1/devices/device/	{"name":"${Device_Name2}", "username":"${Device_Username2}", "password":"${Device_Password2}", "ipaddress":"${Device_IPaddress2}", "group":"${gid_1}", "variables":${device_Variables2}}
	${did_1}	Search_Filter_ID	/api/v1/devices/device/	search=${Device_Name}&name__exact=${Device_Name}
	Set Suite Variable	${did_1}

Add_FortiWeb_User
	SSH_Write
	...	config system admin	edit admin_1	set password fortinet	fortinet	set access-profile prof_admin	end

Cleaning environments
#	Delete_On_Teardown	/api/v1/devices/device/	${Device_Name}	name
	Delete_On_Teardown	/api/v1/devices/device/	${Device_Name2}	name
#	DELETE	/api/v1/devices/device/${did_1}/
	DELETE	/api/v1/devices/group/${gid_1}/
	DELETE	/api/v1/devices/group/${gid_2}/
	SSH_Write
	...	config system admin	delete admin_1	end