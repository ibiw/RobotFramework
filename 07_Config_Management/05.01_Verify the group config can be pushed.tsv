*Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Resource	../Resource/SSH_Resource.tsv
Suite Setup	Run Keywords	Fetch_CM_Token	Create Group	Create Device	Get_Device_Information	Get_Group_ID	Diff_Device
Suite Teardown	Cleaning environments
Force Tags	zx

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
001  Verify group config can be pushed
	SSH_Write	config user local-user	edit testuser	set username testuser	set password fortinet	next	end
	Sleep	5
	GET	/api/v1/devices/group/${Group_ID}/device/
	Response Code Should Be	200
	POST	/api/v1/config/sync-config/	${Device_Dict}
	Response Code Should Be	200
	Sleep	70
	POST	/api/v1/config/group-config/	${Group_Dict}
	Response Code Should Be	200
	SSH_Write	config user local-user	delete testuser	end
	Sleep	5
	POST	/api/v1/config/config-check/	${Group_Dict}
	Response Code Should Be	200
	POST	/api/v1/config/diffcli/	${Generate_Diff_Config}
	Response Code Should Be	200
	Sleep	20
	POST	/api/v1/config/push-config/	${Group_Dict}
	Response Code Should Be	200
	Response Should Contain Sub Dictionary	detail=Push successfully.
	Sleep	30

002  Verify the Elog record correct
	Last Elog Sholud Contain	Configuration push for device (${Device_Name}) succeeded

003  Check the pushed config on FWB CLI
	SSH_Write	show user local-user testuser
	Check_SSH_Output	set username testuser

004  Verify the non-exist group cannot be pushed config

	${Group_Dict_non_exist}	Create Dictionary	group	111
	POST	/api/v1/config/push-config/	${Group_Dict_non_exist}
	Response Code Should Be	400
	Response Should Contain Sub Dictionary	detail=This group is not existed.

*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
Create Group
	Create_On_Setup	/api/v1/devices/group/	name=${Group_Name}	description=${Group_Desc}	variables=${Group_Var}

Create Device
	Create_On_Setup	/api/v1/devices/device/	name=${Device_Name}	username=${Device_Username}
	...	password=${Device_Password}	ipaddress=${Device_IPaddress}	variables=${Device_Variables}	group=${ID}


Diff_Device
	${Generate_Diff_Config}	Create Dictionary	device_id	${Device_ID}
	Set Suite Variable	${Generate_Diff_Config}

Cleaning environments
	SSH_Write	config user local-user	delete testuser	end