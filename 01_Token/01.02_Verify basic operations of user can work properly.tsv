*Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Suite Setup	Run Keywords	Fetch_CM_Token	Add_Local_User
Suite Teardown	Cleaning environments
Force Tags	wcxu

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
&{request_data}	username=fortiweb_qa	password=fortinet
&{request_invalid_credential}	username=fortiweb_qa	password=qwert
&{operation_data}	username=fortinet_qa	password=fortinet	comments=This is a normal local user

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*

001. Verify that user can obtain token
	POST	/api/v1/auth-tokens/	${request_data}
	Response Code Should Be	200
	Dictionary Should Contain Key	${resp.json()}	token
	Dictionary Should Contain Key	${resp.json()}	expires
	Last Elog Sholud Contain	User (fortiweb_qa) with profile (SystemAdmin) logged in from API

002. Verify that user can't obtain token with incorrect password
	POST	/api/v1/auth-tokens/	${request_invalid_credential}
	Response Code Should Be	400
	Response Should Contain String	Authentication failure. Please try again...
	Last Elog Sholud Contain	User (fortiweb_qa) login failed from API

003. Verify that user can add user
	POST	/api/v1/system/user/	${operation_data}
	Response Code Should Be	201
	${User_ID}=	Search_Filter_ID	/api/v1/system/user/	search=fortinet_qa
	Response Should Contain Sub Dictionary	username=fortinet_qa	id=${User_ID}	comments=This is a normal local user	url=/api/v1/system/user/${User_ID}/
	Last Elog Sholud Contain	Adding user (fortinet_qa) succeeded

004. Verify that the new add user can be delete
	${id}=	Search_Filter_ID	/api/v1/system/user/	search=fortinet_qa
	Pass Execution If	'${id}' == '-1'	No User exist
	DELETE	/api/v1/system/user/${id}/
	Response Code Should Be	204
	GET	/api/v1/system/user/
	Dictionary Should Not Contain Value	${resp.json()}	fortinet_qa
	Last Elog Sholud Contain	User (fortinet_qa) deletion succeeded

#005. Verify the user can logout

#006. Verify that user with a timeout token can't login

#007. Verify that user with a invalid token can't login

*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
Add_Local_User
	Create_User_On_Setup	/api/v1/system/user/	username=fortiweb_qa	password=fortinet	comments=This is a normal local user

LOGOUT
	DELETE	[Arguments]	${URL}	${headers}=${admin_headers}
	Create Session	DELETE	https://${CM_IP}
	${resp}=	DELETE Request	DELETE	${URL}	headers=${admin_headers}
	Set Suite Variable	${resp}

Cleaning environments
	Delete_On_Teardown	/api/v1/system/user/	fortiweb_qa	username	#The last 'username' is search_key_name 