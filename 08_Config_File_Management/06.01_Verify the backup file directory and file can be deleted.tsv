*Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Suite Setup	Run Keywords	Fetch_CM_Token	Create_Backup_Directory	Create_Backup_File
Force Tags	zx

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*

&{file_data_mod}	type=file	name=Directory_1/File_1.conf	content=${File_Content}

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
001  Verify the directory and file can be deleted
	DELETE	/api/v1/jobs/backup-file/?type=file&name=Directory_1/File_1.conf
	Response Code Should Be	200
	Last Elog Sholud Contain	Deleting file (Directory_1/File_1.conf) succeeded

	DELETE	/api/v1/jobs/backup-file/?type=directory&name=Directory_1
	Response Code Should Be	200
	Last Elog Sholud Contain	Deleting directory (Directory_1) succeeded

002  Verify the directory and file delete succeed
	GET	/api/v1/jobs/backup-file/?name=Directory_1/File_1.conf
	Response Code Should Be	400
	Should Contain	${resp.content}	not exists

003  Verify the non-exist directory cannot be deleted

	DELETE	/api/v1/jobs/backup-file/?type=directory&name=Directory_1
	Response Code Should Be	400
	Response Should Contain Sub Dictionary	detail=Not find directory Directory_1

004  Verify the non-exist file cannot be deleted

	DELETE	/api/v1/jobs/backup-file/?type=file&name=Directory_1/File_1.conf
	Response Code Should Be	400
	Response Should Contain Sub Dictionary	detail=Not find file Directory_1/File_1.conf

005  Verify the non-exist file cannot be edited

	PUT	/api/v1/jobs/backup-file/	${file_data_mod}
	Response Code Should Be	400
	Response Should Contain Sub Dictionary	detail=File File_1.conf not found

006  Verify the non-exist backup file cannot be download
	GET	/api/v1/jobs/backup-file/download/?name=Directory_1/File_1.conf
	Response Code Should Be	400
	Response Should Contain Sub Dictionary	detail=Not find backup file Directory_1/File_1.conf.

*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
Create_Backup_Directory
	Create_File_On_Setup	/api/v1/jobs/backup-file/	type=directory	name=Directory_1

Create_Backup_File
	Create_File_On_Setup	/api/v1/jobs/backup-file/
	...	type=file	name=Directory_1/File_1.conf	content=${File_Content}
