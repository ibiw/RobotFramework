*Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Suite Setup	Run Keywords	Fetch_CM_Token	Create Group	Create Device	Get_Device_Information	Create Backup Job
...	Get Year Month Day time
Force Tags	zx

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*

&{Job_schedule}	rrule=DTSTART:20180527T075800Z RRULE:FREQ=MINUTELY;INTERVAL=1;COUNT=3	enabled=${true}
${Job_schedule_view}	DTSTART:20180527T075800Z RRULE:FREQ=MINUTELY;INTERVAL=1

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
001  Verify the schedule for the job can be created and view
	${JID}=	Get_Job_ID	job_backup_config
	Set Suite Variable	${JID}
	${schedule_id}	POST Fetch ID	/api/v1/jobs/job/${JID}/schedule/	${Job_schedule}
	Set Suite Variable	${schedule_id}
	Response Code Should Be	201
	Response Should Contain Sub Dictionary	rrule=DTSTART:20180527T075800Z RRULE:FREQ=MINUTELY;INTERVAL=1;COUNT=3	enabled=${true}

002  Verify the job's schedule configurations can be get
	GET	/api/v1/jobs/job/${JID}/schedule/
	Response Code Should Be	200
	Should Contain	${resp.content}	${Job_schedule_view}
	Should Contain	${resp.content}	"enabled":true
	Last Elog Sholud Contain	Schedule creation succeeded for job (job_backup_config)

003  Verify the schedule for the job can be put

	${minute}	Set Variable	${${minute}+${1}}
	${minute_1}	Set Variable If	${minute} > 9	${minute}	${0}${minute}
	${minute_1}	Set Variable If	${minute} > 59	00	${minute_1}
	Set Suite Variable	${minute_1}
	${Job_schedule1}	Create Dictionary	rrule=DTSTART:${${year}}${month}${day}T${hour}${minute_1}${10}Z RRULE:FREQ=MINUTELY;INTERVAL=1;COUNT=1
	...	enabled=${true}	id=${${schedule_id}}	unified_job_template=${${JID}}
	Set Suite Variable	${Job_schedule1}
	PUT	/api/v1/jobs/schedule/${schedule_id}/	${Job_schedule1}
	Response Code Should Be	200
	Response Should Contain Sub Dictionary	rrule=DTSTART:${${year}}${month}${day}T${hour}${minute_1}${10}Z RRULE:FREQ=MINUTELY;INTERVAL=1;COUNT=1

004  Verify the schedule can be get

	GET	/api/v1/jobs/schedule/${schedule_id}/
	Response Code Should Be	200
	Should Contain	${resp.content}	DTSTART:${${year}}${month}${day}T${hour}${minute_1}${10}Z RRULE:FREQ=MINUTELY;INTERVAL=1
	GET	/api/v1/jobs/schedule/
	Response Code Should Be	200
	Should Contain	${resp.content}	DTSTART:${${year}}${month}${day}T${hour}${minute_1}${10}Z RRULE:FREQ=MINUTELY;INTERVAL=1

005  Verify the schedule can be deleted

	DELETE	/api/v1/jobs/schedule/${schedule_id}/
	Response Code Should Be	204
	GET	/api/v1/jobs/schedule/
	Should Contain	${resp.content}	"count":0
	Should Not Contain	${resp.content}	DTSTART:${${year}}${month}${day}T${hour}${minute_1}${10}Z RRULE:FREQ=MINUTELY;INTERVAL=1

006  Verify the non-existent schedule cannot be deleted

	DELETE	/api/v1/jobs/schedule/${schedule_id}/
	Response Code Should Be	404
	Response Should Contain Sub Dictionary	detail=Not found.

007  Verify the non-existent schedule cannot be putted

	PUT	/api/v1/jobs/schedule/${schedule_id}/	${Job_schedule1}
	Response Code Should Be	404
	Response Should Contain Sub Dictionary	detail=Not found.

008  Verify the non-existent schedule cannot be getted

	GET	/api/v1/jobs/schedule/${schedule_id}/
	Response Code Should Be	404
	Response Should Contain Sub Dictionary	detail=Not found.

*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*


Create Group
	Create_On_Setup	/api/v1/devices/group/	name=${Group_Name}	description=${Group_Desc}	variables=${Group_Var}

Create Device
	Create_On_Setup	/api/v1/devices/device/	name=${Device_Name}	username=${Device_Username}
	...	password=${Device_Password}	ipaddress=${Device_IPaddress}	variables=${Device_Variables}	group=${ID}

Create Backup Job
	Create_On_Setup	/api/v1/jobs/job/	name=job_backup_config	plugin=backup-config-for-fortiweb
	...	description=This_is_description_of_this_job	device=${Device_List}

Cleaning environments
	Delete_On_Teardown	/api/v1/jobs/job/	job_backup_config


