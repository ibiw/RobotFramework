*Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Suite Setup	Run Keywords	Fetch_CM_Token	Add_Groups	Add_Profile_and_User
Suite Teardown	Cleaning environments
Force Tags	rw

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
001  Verify the group name can be modified
	${id_1}	Search_Filter_ID	/api/v1/devices/group/	search=${Group_Name}&name__exact=${Group_Name}
	PATCH	/api/v1/devices/group/${id_1}/	{"name":"${Group_Name}-Modified", "description":"This is Test_Group", "variables":{"VIP_1": "1.1.1.1", "DMZ": "Port1"}}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device group (${Group_Name}-Modified) succeeded
	Set Suite Variable	${id_1}

002  Verify the group name can't be modified to an exist one
	${id_2}	Search_Filter_ID	/api/v1/devices/group/	search=${Group_Name2}&name__exact=${Group_Name2}
	Set Suite Variable	${id_2}
	PUT	/api/v1/devices/group/${id_2}/	{"name":"${Group_Name}-Modified", "description":"This is Test_Group", "variables":{"VIP_1": "1.1.1.1", "DMZ": "Port1"}}
	Response Code Should Be	400
	Response Should Contain String	duplicate key value violates unique constraint
	Last Elog Sholud Contain	Key (name)=(${Group_Name}-Modified) already exists.


003  Verify the group name doesn't exist can't be modified
	PUT	/api/v1/devices/group/112233/	{"name":"${Group_Name}-112233", "description":"This is Test_Group", "variables":{"VIP_1": "1.1.1.1", "DMZ": "Port1"}}
#	PUT	/api/v1/devices/group/112233/	{"name":"${Group_Name}-Modified", "description":"This is Test_Group", "variables":{"VIP_1": "1.1.1.1", "DMZ": "Port1"}}
	Response Code Should Be	404
	Response Should Contain String	Not found

004  Verify the group name can't be modified by an unauthorized user
	Fetch_CM_Token	{"username":"none", "password":"fortinet"}
	PUT	/api/v1/devices/group/${id_1}/	{"name":"${Group_Name}-${id_1}", "description":"This is group ${id_1} by user none", "variables":{"VIP_1": "1.1.1.1", "DMZ-Modified": "Port1"}}
	Response Code Should Be	403
	Response Should Contain String	You do not have permission to perform this action
	Fetch_CM_Token

## Group Name supports 512 characters
005  Verify the grou name can be add 64 characters
	PUT	/api/v1/devices/group/${id_2}/	{"name":"Test_Group-64-characters-000000000000000000000000000000000000000", "description":"This is Test_Group", "variables":{"VIP_1": "1.1.1.1", "DMZ": "Port1"}}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device group (Test_Group-64-characters-000000000000000000000000000000000000000) succeeded

006  Verify the description of group can be modified
	PUT	/api/v1/devices/group/${id_1}/	{"name":"${Group_Name}-Modified", "description":"This is Test_Group - ${id_1}", "variables":{"VIP_1": "1.1.1.1", "DMZ": "Port1"}}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device group (${Group_Name}-Modified) succeeded

## Group description supports 127 characters
007  Verify the description of group can add 127 characters
	PUT	/api/v1/devices/group/${id_1}/	{"name":"${Group_Name}-Modified", "description":"127 Characters 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000127", "variables":{"VIP_1": "1.1.1.1", "DMZ": "Port1"}}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device group (${Group_Name}-Modified) succeeded

008  Verify the variables of group can be modified
	PUT	/api/v1/devices/group/${id_1}/	{"name":"${Group_Name}-Modified", "description":"This is group ${id_1}", "variables":{"VIP_1": "1.1.1.1", "DMZ-Modified": "Port1"}}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device group (${Group_Name}-Modified) succeeded

009  Verify the group can be modified by PUT method
	PUT	/api/v1/devices/group/${id_1}/	{"name":"${Group_Name}-${id_1}", "description":"This is group ${id_1} by PUT", "variables":{"VIP_1": "1.1.1.1", "DMZ-Modified": "Port1"}}
	Response Code Should Be	200
	Last Elog Sholud Contain	Editing device group (${Group_Name}-${id_1}) succeeded


*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
Add_Groups
	POST	/api/v1/devices/group/	{"name":"${Group_Name}", "description":"This is ${Group_Name}", "variables":{"VIP_1": "1.1.1.1", "DMZ": "Port1"}}
	POST	/api/v1/devices/group/	{"name":"${Group_Name2}", "description":"This is ${Group_Name2}", "variables":{"VIP_1": "2.2.2.2", "DMZ": "Port1"}}

Add_Profile_and_User
	POST	/api/v1/system/profile/	{"name":"None", "priv":[{"items":[],"label":"Device Manager","name":"devices","descr":"Privilege to manage devices.","priv":"NONE"},{"items":[],"label":"Config Management","name":"config","descr":"Privilege to manage config files.","priv":"NONE"},{"items":[],"label":"Jobs","name":"jobs","descr":"Privilege to manage jobs.","priv":"NONE"},{"items":[],"label":"License","name":"licenses","descr":"Privilege to manage license.","priv":"NONE"},{"items":[],"label":"Log View","name":"logs","descr":"Privilege to manage Logs.","priv":"NONE"},{"items":[],"label":"System Settings","name":"system","descr":"Privilege to Config system settings.","priv":"NONE"}]}
	${profile_id}	Search_Filter_ID	/api/v1/system/profile/	search=None&name__exact=None
	POST	/api/v1/system/user/	{"username":"none", "password":"fortinet", "profile":${profile_id}}
	Set Suite Variable	${profile_id}

Cleaning environments
	DELETE	/api/v1/devices/group/${id_1}/
	DELETE	/api/v1/devices/group/${id_2}/
	Delete_On_Teardown	/api/v1/system/user/	none	username
	DELETE	/api/v1/system/profile/${profile_id}/




