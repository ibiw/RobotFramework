 *Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Suite Setup	Run Keywords	Fetch_CM_Token	Create Group	Create Device	Get_Device_Information	Create Backup Job
...	Create Workflow Job
Suite Teardown	Cleaning environments
Force Tags	zx

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*

001  Create workflow node

	${JID}	Get_Job_ID	job_backup_config_node
	Set Suite Variable	${JID}
	${Workflow_Node}	Create Dictionary	unified_job_template=${JID}
	${node_id_1}	POST Fetch ID	/api/v1/jobs/workflow/${ID}/workflow-node/	${Workflow_Node}
	Set Suite Variable	${node_id_1}
	Response Code Should Be	201


002  Launch this workflow job

	${Job_Event_ID}	POST Fetch ID	/api/v1/jobs/workflow/${ID}/launch/
	Response Code Should Be	201
	Sleep	30
	${Event_ID_tmp}	Get From Dictionary	${resp.json()}	workflow_job
	Set Suite Variable	${Event_ID_tmp}

	${Event_ID_tmp1}	POST Fetch ID	/api/v1/jobs/workflow/event/${Event_ID_tmp}/relaunch/
	Set Suite Variable	${Event_ID_tmp1}
	Sleep	30
	GET	/api/v1/jobs/workflow/event/${Event_ID_tmp1}
	Response Code Should Be	200
	Should Contain	${resp.content}	"id":${${Event_ID_tmp1}}
	Should Contain	${resp.content}	"url":"/api/v1/jobs/workflow/event/${Event_ID_tmp1}/"

003  Verify the node of job launch successfully
	${Job_Event_ID1}	Set Variable	${${Event_ID_tmp1}+${1}}
	GET	/api/v1/jobs/job/event/${Job_Event_ID1}/
	Response Code Should Be	200
	Response Should Contain Sub Dictionary	id=${Job_Event_ID1}	name=job_backup_config_node	device=${Device_List}
#	Check The Job Launch Successfully
	Should Contain	${resp.content}	failed=0
	Should Contain	${resp.content}	ok=3

004  Verify the workflow job and job node launch successfully
	GET	/api/v1/jobs/workflow/event/${Event_ID_tmp1}/
	Response Should Contain Sub Dictionary	id=${Event_ID_tmp1}	url=/api/v1/jobs/workflow/event/${Event_ID_tmp1}/
	...	unified_job_template=${${ID}}

	GET	/api/v1/jobs/workflow/event/${Event_ID_tmp1}/workflow-node/
	Response Should Contain Sub Dictionary	count=${1}

005  Verify the non-exist workflow job cannot be relaunched
	POST	/api/v1/jobs/workflow/event/16611/relaunch/
	Response Code Should Be	404
	Should Contain	${resp.content}	"detail":"Not found."

*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*

Create Group
	Create_On_Setup	/api/v1/devices/group/	name=${Group_Name}	description=${Group_Desc}	variables=${Group_Var}

Create Device
	Create_On_Setup	/api/v1/devices/device/	name=${Device_Name}	username=${Device_Username}
	...	password=${Device_Password}	ipaddress=${Device_IPaddress}	variables=${Device_Variables}	group=${ID}

Create Backup Job
	Create_On_Setup	/api/v1/jobs/job/	name=job_backup_config_node	plugin=backup-config-for-fortiweb
	...	description=This_is_description_of_this_job	device=${Device_List}

Create Workflow Job
	Create_On_Setup	/api/v1/jobs/workflow/	name=workflow_event_relaunch	description=This is a workflow job

Cleaning environments

	Delete_On_Teardown	/api/v1/jobs/workflow/	workflow_event_relaunch
	Delete_On_Teardown	/api/v1/jobs/job/	job_backup_config_node