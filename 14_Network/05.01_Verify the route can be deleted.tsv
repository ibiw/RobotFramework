*Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Resource	../Resource/SSH_Resource_CM.tsv
Suite Setup	Run Keywords	Fetch_CM_Token	Add Route For Delete	Get Route ID
Force Tags	zx

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*

001  Verify the route can be deleted

	DELETE	/api/v1/system/network/route/${RID}/
	Response Code Should Be	200
	Response Should Contain Sub Dictionary	detail=Deleting route succeeded
	Last Elog Sholud Contain	Network route deletion succeeded
	GET	/api/v1/system/network/route/${RID}/
	Response Code Should Be	400
	Response Should Contain Sub Dictionary	detail=The route does not exist

002  Verify the non-exist route cannot be deleted

	DELETE	/api/v1/system/network/route/12345/
	Response Code Should Be	400
	Response Should Contain Sub Dictionary	detail=Deleting route failed, Route not existing

003  Verify the route has been deleted successfully
	SSH_Write	show route
	Check_SSH_Output_Not_Contain	201.1.1.0/24
	SSH_Write	fn sh	cd /etc/network	tail -n 5 interfaces
	Check_SSH_Output_Not_Contain	post-up ip route add 201.1.1.0/24 via 10.200.0.1

*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
Add Route For Delete
	${route_dic}	Create Dictionary	destination_ip_mask=201.1.1.0/24	gateway=10.200.0.1	name=port1
	${RID}=	Search_Filter_ID	/api/v1/system/network/route/	search=201.1
	Run Keyword If	${RID} == -1	POST	/api/v1/system/network/route/	${route_dic}

Get Route ID
	${RID}=	Search_Filter_ID	/api/v1/system/network/route/	search=201.1
	Set Suite Variable	${RID}
