*Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Suite Setup	Run Keywords	Fetch_CM_Token	Add_RADIUSServer	Add_RADIUSUser
Suite Teardown	Cleaning environments
Force Tags	rw

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
&{request_data_radius_user}	username=${username}	password=fortinet	server=Auto_RADIUSServer1	comments=This is a normal radius user	type=radius
# &{Auto_radiususer1_credential_incorrect}	username=test1	password=fortinetfdsfsd
# &{Auto_radiususer1_credential}	username=test1	password=123456
# &{patch_data}	name=Auto_RADIUSServer1	server_uri_1=10.200.10.16
${username}	test1
${timeout}	${5}
&{timeout_data}	authTimeout=${timeout}

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*

001  Verify the Authentication Timeout can be Setting
	POST	/api/v1/system/network/admin-settings/	${timeout_data}
	Response Code Should Be	200

002  Verify the Authentication Timeout can be Get
	GET	/api/v1/system/network/admin-settings/
	Response Code Should Be	200
	${tmp}	Get Dictionary Values	${resp.json()}
	# Log to Console	${\n}${tmp[0]}
	Should be Equal	${tmp[0]}	${timeout}


003  Verify the Authentication Timeout works
	Fetch_CM_Token	{"username":"${username}", "password":"fortinet"}
	Response Code Should Be	200
	# Log to Console	${date}
	Last Elog Sholud Contain	User (${username}) with profile (SystemAdmin) logged in
	Fetch_CM_Token

*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
Add_RADIUSServer
	Create_On_Setup	/api/v1/system/radius-server/	name=Auto_RADIUSServer1	server_uri_1=10.200.111.241	server_secret_1=fortinet

Add_RADIUSUser
	Create_User_On_Setup	/api/v1/system/user/	username=${username}	password=fortinet	server=Auto_RADIUSServer1	comments=This is a normal radius user	type=RADIUS

Cleaning environments
	Delete_On_Teardown	/api/v1/system/user/	${username}	username
	Delete_On_Teardown	/api/v1/system/radius-server/	Auto_RADIUSServer1	name