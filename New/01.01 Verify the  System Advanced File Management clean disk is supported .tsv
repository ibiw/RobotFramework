*Setting*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
Resource	../Resource/CM_Resource.tsv
Resource	../Resource/SSH_Resource_CM.tsv
Suite Setup	Run Keywords	Fetch_CM_Token
Suite Teardown	Cleaning environments
Force Tags	rw

*Variable*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*	*Value*
@{int__val_validation}	x	中文	-1	0	1000
# ${data}=	{"entries":[{"int_val":365,"name":"elog","enabled":true,"due_time":"18:00", "int_unit":"days","id":1},{"int_val":54,"name":"jobevent","enabled":true,"due_time":"18:00", "int_unit":"weeks","id":2}, {"int_val":12,"name":"backup","enabled":true,"due_time":"18:00","int_unit":"months","id":3}]}
# @{int_val}	1	365	999	1000	-1	x	中文
# @{int_val}	1	365	999	1000
@{int_val}	${1}	${365}	${999}	${1000}
@{name}	elog	jobevent	backup
@{is_enable}	${True}	${False}
@{due_time}	23:00	18:00	00:00
@{id}	${1}	${2}	${3}	${999}
@{int_unit}	days	weeks	months
# ${data}	{"entries":[{"int_val":365,"name":"elog","enabled":true,"due_time":"18:00", "int_unit":"days","id":1},{"int_val":54,"name":"jobevent","enabled":true,"due_time":"18:00", "int_unit":"weeks","id":2}, {"int_val":12,"name":"backup","enabled":true,"due_time":"18:00","int_unit":"months","id":3}]}

&{elog}	int_val=${int_val[0]}	name=${name[0]}	enabled=${is_enable[0]}	due_time=${due_time[0]}	int_unit=${int_unit[0]}	id=${id[0]}
&{jobevent}	int_val=${int_val[0]}	name=${name[1]}	enabled=${is_enable[0]}	due_time=${due_time[1]}	int_unit=${int_unit[0]}	id=${id[1]}
&{backup}	int_val=${int_val[0]}	name=${name[2]}	enabled=${is_enable[0]}	due_time=${due_time[2]}	int_unit=${int_unit[0]}	id=${id[2]}

@{items}	${elog}	${jobevent}	${backup}

&{data}	entries=${items}

###	root@fortiwebcm:/var/log/fwbcm# pwd
###	/var/log/fwbcm
###	root@fortiwebcm:/var/log/fwbcm# tail -F celery-beat.log
###	root@fortiwebcm:/var/log/fwbcm# grep clean_expire_rec_files *

*Test Case*	*Action*	 *Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
## Failed. When push config, it does not recognized the Administrative Doma has been enabled
## No config need to push!



001  Verify the Events logs can be set in Days
	# POST	/api/v1/system/maintenance/clean/	{"entries":[{"int_val":333,"name":"backup","enabled":true,"due_time":"18:00","int_unit":"days","id":3}, {}, {}]}
	# POST	/api/v1/system/maintenance/clean/	{"entries":[{"int_val":1,"name":"elog","enabled":true,"due_time":"18:00","int_unit":"days","id":1},{"int_val":1,"name":"jobevent","enabled":true,"due_time":"18:00","int_unit":"weeks","id":2},{"int_val":1,"name":"backup","enabled":true,"due_time":"18:00","int_unit":"months","id":3}]}

	# Set to Dictionary	

	# Log to Console	${\n}${data["entries"][0]}
	# POST	/api/v1/system/maintenance/clean/	${data}
	# Response Code Should Be	200
	Data_Set	elog	${11}	days	22:00	${True}	${1}

002  Verify the Events logs can be set in Weeks
	# POST	/api/v1/system/maintenance/clean/	{"entries":[{"int_val":365,"name":"elog","enabled":true,"due_time":"18:00","int_unit":"weeks","id":1}, {}, {}]}
	# Response Code Sholud Be	200
	Data_Set	elog	${11}	weeks	22:00	${True}	${1}

003  Verify the Events logs can be set in Months
	# POST	/api/v1/system/maintenance/clean/	{"entries":[{"int_val":365,"name":"elog","enabled":true,"due_time":"18:00","int_unit":"months","id":1}, {}, {}]}
	# Response Code Sholud Be	200
	Data_Set	elog	${11}	months	22:00	${True}	${1}

004  Verify the Events logs can be scheduled daily at a time
	# POST	/api/v1/system/maintenance/clean/	${data}
	# Response Code Should Be	200
	Data_Set	elog	${1}	days	21:00	${True}	${1}

005  Verify the Events logs only accept integers less than 999
	Int_Validation	elog	${1}

006  Verify the Events logs Automatically Delete can be disabled
	Data_Set	elog	${1}	days	23:00	${False}	${1}

007  Verify the Events logs Automatically Delete can be enable again after disabled
	Data_Set	elog	${1}	days	21:00	${True}	${1}

101  Verify the Job Events can be set in Days
	Data_Set	jobevent	${12}	days	22:00	${True}	${2}

102  Verify the Job Events can be set in Weeks
	Data_Set	jobevent	${11}	weeks	22:00	${True}	${2}

103  Verify the Job Events can be set in Months
	Data_Set	jobevent	${11}	months	22:00	${True}	${2}

104  Verify the Job Events can be scheduled daily at a time
	Data_Set	jobevent	${11}	days	22:00	${True}	${2}

105  Verify the Job Events only accept integers less than 999
	Int_Validation	jobevent	${2}

106  Verify the Job Events Automatically Delete can be disabled
	Data_Set	jobevent	${11}	days	22:00	${False}	${2}

107  Verify the Job Events Automatically Delete can be enable again after disabled
	Data_Set	jobevent	${1}	days	22:00	${True}	${1}

201  Verify the Backup config can be set in Days
	Data_Set	backup	${13}	days	22:00	${True}	${3}

202  Verify the Backup config can be set in Weeks
	Data_Set	backup	${13}	weeks	22:00	${True}	${3}

203  Verify the Backup config can be set in Months
	Data_Set	backup	${13}	months	22:00	${True}	${3}

204  Verify the Backup config can be scheduled daily at a time
	Data_Set	backup	${13}	days	23:00	${True}	${3}

205  Verify the Backup config only accept integers less than 999
	Int_Validation	backup	${3}

206  Verify the Backup config Automatically Delete can be disabled
	Data_Set	backup	${13}	days	22:00	${False}	${3}

207  Verify the Backup config Automatically Delete can be enable again after disabled
	Data_Set	backup	${1}	days	23:00	${True}	${3}

301  Verify the empty data will not cause any isue
	POST	/api/v1/system/maintenance/clean/	{"entries":[{}, {}, {}]}
	Response Code Should Be	400
	Response Should Contain String	Entry missing name field
	# Last Elog Sholud Contain	Setting Clean Entries succeeded
	# GET	/api/v1/system/maintenance/clean/
	# Response Code Should Be	200
	# ${get_data}	Set Variable	${resp.json()}
	# Log to Console	${\n}--${get_data}
	# Should Be True	0	Get length	${get_data}

# 666  Verify the empty data will not cause any isue
# 	:FOR 	${int}	IN RANGE	1	9
# 		POST	/api/v1/system/maintenance/clean/	{"entries":[{"int_val":"${int}","name":"backup","enabled":true,"due_time":"18:00","int_unit":"days","id":3}, {}, {}]}


777  Format log disk
	:FOR 	${int}	in RANGE	1	100
		SSH_Write	execute formatlogdisk	y
		Log to Console	${\n}${int}
		Sleep	60

787  Group Log
	# POST	/api/v1/devices/group/	{"name":"${Group_Name}", "description":"This is ${Group_Name}", "variables":{"VIP_1": "1.1.1.1", "DMZ": "Port1"}}
	# ${id_1}	Search_Filter_ID	/api/v1/devices/group/	search=${Group_Name}&name__exact=${Group_Name}
	# Set Suite Variable	${id_1}
	${Job_ID}=	Get_Job_ID	j1
	:FOR 	${int}	IN RANGE	999999
		PATCH	/api/v1/devices/group/1/	{"name":"${Group_Name}-${int}"}
		Log to Console	--${int}-${Job_ID}
		Response Code Should Be	200
		POST	api/v1/jobs/job/${Job_ID}/launch/
		Response Code Should Be	200
		Sleep	0.5

*Keyword*	*Action*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*	*Argument*
Data_Set
	[Arguments]	${names}	${val}	${unit}	${dtime}	${enabled}	${ids}
	# Set to Dictionary	${elog}	int_val=${int_val[0]}	name=${name[0]}	enabled=${is_enable[0]}	due_time=${due_time[0]}	int_unit=${int_unit[0]}	id=${id[0]}
	# Set to Dictionary	${jobevent}	int_val=${int_val[1]}	name=${name[1]}	enabled=${is_enable[0]}	due_time=${due_time[1]}	int_unit=${int_unit[1]}	id=${id[1]}
	# Set to Dictionary	${backup}	int_val=${int_val[2]}	name=${name[2]}	enabled=${is_enable[0]}	due_time=${due_time[2]}	int_unit=${int_unit[2]}	id=${id[2]}
	Set to Dictionary	${${names}}	int_val=${val}	name=${names}	enabled=${enabled}	due_time=${dtime}	int_unit=${unit}	id=${ids}
	Set List Value	${items}	0	${elog}	
	Set List Value	${items}	1	${jobevent}
	Set List Value	${items}	2	${backup}
	Set to Dictionary	${data}	entries=${items}
	POST	/api/v1/system/maintenance/clean/	${data}
	Response Code Should Be	200

Int_Validation
	[Arguments]	${names}	${ids}
	:FOR	${int}	in	@{int__val_validation}
		Set to Dictionary	${${names}}	int_val=${int}	name=${names}	enabled=${is_enable[0]}	due_time=${due_time[2]}	int_unit=${int_unit[0]}	id=${ids}
		Set List Value	${items}	0	${elog}	
		Set List Value	${items}	1	${jobevent}
		Set List Value	${items}	2	${backup}
		Set to Dictionary	${data}	entries=${items}
		POST	/api/v1/system/maintenance/clean/	${data}
		Response Code Should Be	400
		Response Should Contain String	Invalid Interval value:
		

Cleaning environments
	Sleep	1

# [
#     {
#         "int_val": 365,
#         "name": "elog",
#         "enabled": true,
#         "due_time": "00:00",
#         "int_unit": "days",
#         "id": 1
#     },
#     {
#         "int_val": 365,
#         "name": "jobevent",
#         "enabled": true,
#         "due_time": "00:00",
#         "int_unit": "days",
#         "id": 2
#     },
#     {
#         "int_val": 365,
#         "name": "backup",
#         "enabled": true,
#         "due_time": "00:00",
#         "int_unit": "days",
#         "id": 3
#     }
# ]